alias l='  ls --almost-all --color --classify --format=long --human-readable --inode --ignore-backups --ignore=.git'
alias lh=' l --hyperlink'
alias lr=' l --recursive'
alias grep='grep --extended-regexp --color --ignore-case'
alias rg='grep --extended-regexp --color --recursive --line-number -I --exclude=".*" --exclude-dir=".git" --exclude-dir="*cache*"'
alias sed='sed --regexp-extended --silent'
alias sedi=' sed --in-place=.bak'
alias md=' mkdir --parents --verbose'
alias rd=' rmdir --parents --verbose'
alias rm=' rm --interactive=once --verbose --recursive'
alias bat=' bat --style=numbers,changes'
alias bh=' bat --plain --language=help'
alias nc=' ncmpcpp'

alias _='sudo '

alias vi=' nvim'
alias Vi=' _ --preserve-env nvim'
alias fm=' ranger'
alias Fm=' _ --preserve-env ranger'
alias ln=' ln --interactive --symbolic --relative --logical --verbose'
alias lnh=' ln --interactive --logical --verbose'

alias cp=' cp --interactive --dereference --recursive --update --verbose --reflink=auto --sparse=auto --archive'
alias mv=' mv --interactive --update --verbose'

#mounting and unmount drives without user password
alias mount=' _ systemd-mount --no-block --fsck=no --collect --owner=$USER'
alias umount=' _ systemd-umount'
alias lb=" lsblk -oPATH,MOUNTPOINTS,LABEL,FSTYPE,SIZE,FSAVAIL,FSUSED,PARTUUID,MAJ:MIN"

alias tarx=' bsdtar -xvf '
alias tarv=' bsdtar -tvf '
alias tarzip=' bsdtar --auto-compress --option="zip:compression=deflate" -cvf '
alias targzip=' bsdtar --auto-compress --option="gzip:compression-level=9" -cvf '
alias tarzst=' bsdtar --auto-compress --option="zstd:compression-level=22,zstd:threads=0" -cvf '
alias tarxz=' bsdtar --auto-compress --option="xz:compression-level=9,xz:threads=0" -cvf '

alias p=' poetry'
alias pr=' poetry run'
alias prp=' poetry run python'

alias help=run-help

alias du=' du -h -d 1'

alias which=' whence -vaS'


#edit .zshrc using $EDITOR
alias ez=" $EDITOR $ZDOTDIR/.zshrc"

#edit ~/.zshenv
alias ee=" $EDITOR $ZDOTDIR/.zshenv"

#edit zprofile
alias ep=" $EDITOR $ZDOTDIR/.zprofile"

#edit ~/.zshenv
alias eh=" $EDITOR $ZDOTDIR/.zsh_history"

#edit ~/.zsh_aliases
alias ea=" $EDITOR $ZDOTDIR/.zsh_aliases"

#edit $XDG_CONFIG_HOME/sway/config
alias es=" $EDITOR $DOTFILES/sway/config"

#Source changes in specified files into zsh
alias sz=" exec zsh"
alias sp=" exec zsh -l"

#Aptitude aliases
alias pmu=' _ pacman -Syu'
alias pmr=' _ pacman -Rsn'
alias pmi=' _ pacman -S'
alias pmp=' _ pacman -Rcunsv'
alias pmfi=' pacman -Slq | fzf --multi --preview "pacman -Si {1}" | xargs -ro sudo pacman -S'
alias pmfr='pacman -Qq | fzf --multi --preview "pacman -Qi {1}" | xargs -ro sudo pacman -Rns'
alias pmii=' pacman -Qii'
alias pmis=' pacman -Qs'
alias pmsi=' pacman -Sii'
alias pmss=' pacman -Ss'
alias pmsf=' pacman -F'
alias pml=' pacman -Qe'
alias pmlf=' pacman -Ql'
alias pmlfr=' pacman -Fl'
alias pmly=' pacman -Qmq'
alias pmb=' pacman -Qo'
alias pmc=' _ pacman -Qdtq| _ pacman -Rsn -'
alias pmcc=' _ pacman -Sc'

#Git aliases
alias gp=' git push'
alias gs=' git status -s'
alias gst=' git status'
alias gcl=' git clone --recurse-submodules'
alias gc=' git commit'
alias ga=' git add'
alias gpu=' git pull'
alias gl=' git log --graph --oneline --decorate'
alias glp=' git log -p'
alias glt=' git log --stat -1'
alias glf=' git log --follow -p'
alias gmlp=' git log --submodule -p'
alias gd=' git diff'
alias gg=' git grep --recurse-submodules -I'
alias gm=' git mv'
alias gr=' git rm -r'
alias grf=' git rm -rf'
alias gmu=' git submodule update --init --recursive'
alias gmpu=' git submodule update --remote --rebase'
alias gsh=' git show'

#Systemd services
alias enabled_services=' systemctl list-unit-files --type=service --state=enabled'
alias running_services=' systemctl list-units  --type=service  --state=running'
alias all_services=' systemctl -at service'

# Changing/making/removing directory
alias -g ...='../..'
alias -g ....='../../..'
alias -g .....='../../../..'
alias -g ......='../../../../..'

alias -- -=' cd -'
alias d=' dirs -v'
for index ({0..9}) alias $index=" cd +${index}"; unset index

function a2l(){
  addr2line --functions --inlines --pretty-print --demangle --exe $argv[1] --addresses $argv[2,#argv]
}

function zc(){
    zcalc -f -e "$@"
}

function zr(){
if (($+commands[zig]));then
     zig build run -- ${argv[@]}
else
    echo 'install zig on your system'
fi
}

if [[ $(printenv WSL2_GUI_APPS_ENABLED) -eq 1 ]]; then
    alias sway='LIBGL_ALWAYS_SOFTWARE=true sway &'
fi
