w
who
ping 8.8.8.8 -c 10
mktemp
printenv $XDG_CONFIG_HOME
nix-env -iA nixpkgs.nix
nix-channel -u
sudo chown ultracode:ultracode -R /nix/
nix-env -u --dry-run
node --help
nix search -u zls
nix-env --description -qa '.*emacs.*'
nix-env -qaPA nixpkgs.emacs
nix repl
nix-env -qaA nixpkgs.zls
sh build2-install-0.14.0-a.0-stage.sh
nix-env --description -qaA nixpkgs.opengl
modinfo drm
bdep new -t exe opengl -A builds/debug/ @debug
bdep init -A ../builds/sanitized/ @sanitized
make install
sudo make install
bdep new -t empty cpputils -A builds/debug/ @debug
bdep new -t empty -A builds/debug/ @debug cpputils
bdep new -t empty cpputils
bdep new --package -l c++,mxx=mxx,cxx=cxx,hxx=hxx -t lib,alt-naming,subdir=src fp
bdep new --package -l c++,mxx=mxx,cxx=cxx,hxx=hxx -t lib,alt-naming,subdir=src utils
bdep new --package -l c++,mxx=mxx,cxx=cxx,hxx=hxx -t lib,alt-naming,subdir=src fs
bdep new --package -l c++,mxx=mxx,cxx=cxx,hxx=hxx -t lib,alt-naming,subdir=src net
bdep new --package -l c++,mxx=mxx,cxx=cxx,hxx=hxx -t lib,alt-naming,subdir=src eh
bdep new -A ../builds/debug/ @debug
bdep init -A ../builds/debug/ @debug
bdep new --package -l c++,mxx=mxx -t lib,alt-naming,subdir=src modular
objdump -a libfp.so
objdump -rt libfp.so
readelf -a libfp.so
nm -C libfp.so
b install config.install.root=../../cpinstall/
b install config.install.root=/tmp/cpinstall/
b uninstall config.install.root=/tmp/cpinstall/
bdep deinit
bdep config remove @debug
bdep deinit @sanitized
kitty --session /home/ultracode/.etc/kitty/session.conf
title cosac
kitty + list-fonts --psnames | grep Fira
kitty list-fonts
b configure config.import.liberrors=../../liberrors/
x-terminal-emulator --start-as=fullscreen
b configure: ../../builds/sanitized/ds/ config.import.liberrors=../../liberrors/
bdep status -i
bdep sync liberrors
bpkg rep-fetch
bpkg rep-info https://github.com/Ultra-Code/liberrors.git
Documents/FINANCIAL\ RECORDS
bpkg rep-fetch https://github.com/Ultra-Code/liberrors.git\#master
bdep status -a
bdep status -ar
bpkg rep-info https://github.com/Ultra-Code/liberrors.git\#master
b info
pkg-config glfw3 --libs --cflags
bdep sync '?sys:libglfw3-dev/*'
service --status-all
systemctl list-unit-files --state=enabled
free -h
service apparmor
systemd-analyze syscall-filter
systemd-analyze exit-status
bdep sync '?sys:pthread/*'
bdep deinit @thread-safe
bdep init -A ../builds/thread-safe/ @thread-safe -- -- '?sys:pthread/*'
bdep config remove @thread-safe
bdep init -A ../builds/thread-safe/ @thread-safe -- '?sys:pthread/*'
bdep sync @sanitized '?sys:libglfw3-dev/*' '?sys:libepoxy-dev/*'
bdep config remove @sanitized
bdep init -A ../builds/sanitized/ @sanitized -- '?sys:pthread/*'
bdep update @thread-safe
mount /var/lib/libvirt/images/debian_disk.img /mnt
sudo mount /var/lib/libvirt/images/debian_disk.img /mnt
sudo mount -t btrfs /var/lib/libvirt/images/debian_disk.img /mnt
sudo usermod -aG ultracode libvirt-qemu
sudo du -h -d 1 .
update-alternatives --display x-session-manager
update-alternatives --display x-window-manager
update-alternatives --query x-terminal-emulator
fpath=($PWD)
b configure config.cxx.loptions=-L/home/ultracode/repos/cxx/build2/builds/
b configure config.cxx.libs='-ldl -l:libbacktrace.a'
b test
bdep new -t exe lost_config
b create gcc_config cc config.cxx=g++
b create gcc_config/ cc config.cxx=g++
b create: gcc_config/ cxx config.cxx=g++
b create: gcc_config/,cxx config.cxx=g++
b configure: lost_config/@gcc_config/
bdep update @gcc
bdep deinit @gcc
b configure: ../lost_config/@../gcc_config
bdep init -A ../gcc_config/ @gcc
bdep config remove @gcc
bdep init -C ../gcc/ cxx config.cxx=g++
bdep status -o
bdep fetch fmt
checkinstall
sudo apt install ./gnome-epub-thumbnailer_1.6-1_amd64.deb
sudo apt-get --auto-remove remove gnome-books
sudo apt install gnome-books
sudo apt --install-recommends install gnome-books
nautilus -q
nix-shell -p nix-info --run "nix-info -m"
sudo update-alternatives --config ld
sudo apt install --install-recommends libbackward-cpp-dev
b configure: config.cxx.libs = '-ldw -ldl'
nix -u search  emacs
nix-channel --add https://nixos.org/channels/nixos-unstable nix_unstable
brew info hello
rename 's/.mxx/.hxx/' src/*.mxx
pkg-config --cflags --libs egl
nix-shell -p glxinfo --run "glxinfo"
nix-channel --add https://github.com/guibou/nixGL/archive/master.tar.gz nixgl && nix-channel --update
nixGLIntel $(nix run nixpkgs.glxinfo -c glxinfo) | grep -i 'OpenGL version string'
nix-store --query --references $(which nixGLIntel)
patchelf --set-rpath /lib:/lib64 ~/.nixpkgs/libGL.so.1.7.0
sudo systemctl start libvirt-guests.service
sudo systemctl start virtlockd.service
sudo systemctl start libvirtd-tcp.socket
journalctl -xe
update-desktop-database
printenv XDG_DATA_DIRS
sudo update-desktop-database -v ~/.nix-profile/share/applications/
NIX_PATH="nixpkgs=https://github.com/NixOS/nixpkgs/archive/release-21.05.tar.gz"
title exec
frontends/HealthManagement
clear
sh -c "$(curl -fsSL https://raw.githubusercontent.com/zdharma/zinit/master/doc/install.sh)"
sudo umount /mnt
sudo systemctl set-default multi-user.target
nix-env -e cppcheck
sudo apt policy cppcheck
sudo apt list cppcheck
sudo apt install libavutil56=7:4.3.2-0+deb11u2
sudo groupdel -f nixbld
sudo dpkg-reconfigure locales
nmcli radio wifi
nmcli device show
nmcli connection show
nmcli device disconnect wlo1
nmcli radio wifi off
nmcli connection delete Ultra\ Malpha
nmcli device status
nmcli -ask device wifi connect Ultra\ Malpha
nmtui
nix-env -iA nixpkgs.luaformatter
nix-channel --remove nixpkgs
nix-channel --add https://nixos.org/channels/nixos-unstable nix
nix-env -qa --installed "*"
nix-env -e stylua
nix-env -iA nixpkgs.stylua
nix search -u luaformatter
nix-store --gc --print-dead
nix-store --gc
nix search luaformatter
plugrc/init.lua
nvim -u NONE -U NONE -N -i NONE nvim/lua/plugins.lua\
sudo networkctl up wlo1
p10k configure
prettier --write src/
nix-channel --remove nix
nix search stylua
nix-env -iA unstable.direnv
printenv IN_NIX_SHELL
cmake --help
sudo systemctl start libvirtd.service
sudo virsh net-autostart default
networkctl status
sudo virsh net-start default
networkctl lldp
healthmanagementapi
ninja -C build
nix search build2
sh build2-install-0.14.0-a.0-stage.sh --yes --upgrade -j 5
sudo virsh net-destroy default
ping 10.0.0.1 -c 10
ip a l
sudo ip addr add 10.0.0.3/24 dev eth0
ip route
sudo ip link set dev eno1 up
sudo sh build2-install-0.14.0-a.0-stage.sh --stage-suffix '-next' --yes -j 5 /usr/local/build2
sudo ssh 127.0.0.1
ssh 0.0.0.0
ssh -v 0.0.0.0
printenv PWD
hostnamectl
sudo ip addr add 10.0.0.3/24 dev enp3s0
ping 10.0.0.7 -c 7
sudo ip addr delete 10.0.0.3/24 dev enp3s0
sudo dmesg --follow
rsync --info=ALL -z Videos/BOLLYWOOD/ isaac@192.168.8.102:~/Windows/BOLLYWOOD
scp -Cr Videos/BOLLYWOOD/ isaac@192.168.8.102:~/Windows/
rsync --info=ALL -zr Videos/BOLLYWOOD/ isaac@192.168.8.102:~/Windows/BOLLYWOOD/
rsync --info=ALL -zr Videos/Holywood Videos/looney_tunes/ Videos/Panda/ Videos/Series/ isaac@192.168.8.102:~/Windows/
sudo aptitude install adwaita-qt
sudo aptitude install qt5-style-kvantum
sudo aptitude install qtwayland5
clementine
sudo tlp-stat
sudo systemctl set-default graphical.target
ip a
md stow
stow -v kitty.app
nix-env --description -qaA unstable.neovim
nix search unstable.neovim
nix search -u unstable.neovim
stow build2
sudo stow build2
ssh -vT git@github.com
ssh -vT Ultra-Code@github.com
ssh-add -l
ssh-add -l -E md5
ssh-add -l -E sha256
ssh-keygen -ted25519 -C "mega.alpha100@gmail.com"
sudo aptitude install wl-clipboard
wl-copy < ~/.ssh/id_ed25519.pub
hostname -I
wl-copy -p "hello my wl-copy"
ssh-agent --help
sudo systemctl start ssh.socket
cmgen -S .
curl -L https://sw.kovidgoyal.net/kitty/installer.sh | sh /dev/stdin \\
    dest=~/.local/stow launch=n
kitty --version
ssh-add ~/.ssh/id_ed25519
printenv SSH_AGENT_PID
printenv SSH_AUTH_SOCK
nix search gnome-tweaks
nix-store --query --references\\
  $(nix-instantiate '<nixpkgs>' -A gnome-tweaks)
nix-store --query --references\\
  $(nix-instantiate '<nixpkgs>' -A gnome.gnome-tweaks)
nmcli radio wifi on
nmcli device wifi list
nmcli device wifi connect Ultra\ Malpha
nix-env -v -j 5 --upgrade
sudo rm -rf /etc/profile/nix.sh /etc/nix /nix ~root/.nix-profile ~root/.nix-defexpr ~root/.nix-channels ~/.nix-profile ~/.nix-defexpr ~/.nix-channels
sudo systemctl daemon-reload
sh <(curl -L https://nixos.org/nix/install)
nix search neovim
nix search direnv
nix search -u direnv
nix-collect-garbage -d
nix-channel --list
nix-env --description -qaA nixpkgs.direnv
nix-env --description -qaA nixpkgs.nix-direnv
nix search nixUnstable
nix-env -f '<nixpkgs>' -iA luaformatter
