# Default config for sway
# Read `man 5 sway` for a complete reference.

#disable XWayland entirely and run a "pure" Wayland session
xwayland disable

# Logo key .ie widows key. Use Mod1 for Alt.
set $mod Mod4
set $AltMod Mod1

### Output configuration
### Set random wallpaper
set $wallpapers_path $HOME/Pictures/Code
output * bg $(find $wallpapers_path -type f | shuf -n 1) fill

# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
## NOTE: if using systemd configure logind.conf's IdleAction and IdleActionSec to tell systemd what action to execute
##       when idle and after what time the system is assumed to be in an idle state
##       create a user service with idlehint like in https://github.com/Ultra-Code/dotfiles/blob/master/archlinux/sway/swayidle.service#L8
##       https://wiki.archlinux.org/title/Sway#Manage_Sway-specific_daemons_with_systemd

# From my configuration this will lock your screen after 300 seconds of inactivity with a wallpaper, then turn off
# your displays after another 300 seconds,notify systemd that the system is idle after 180 seconds, and based on the
# configuration in https://github.com/Ultra-Code/dotfiles/blob/master/archlinux/systemd/logind.conf#L39 execute hybrid-sleep
# after 7min of inactivity and when resuming from inactivity turn your screens back on.
# It will also lock your screen before your computer goes to sleep.

### Input configuration

input "2:14:ETPS/2_Elantech_Touchpad" {
  tap enabled
  natural_scroll enabled
  middle_emulation enabled
  click_method clickfinger
  pointer_accel 0.5 # set mouse sensitivity (between -1 and 1)
}

#Set compose key as right alt
#for feather reading man 7 xkeyboard-config
input * xkb_options compose:ralt
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
# Kill focused window
bindsym $mod+Shift+q kill

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+r reload


# set $power_mangement System: (l) lock, (e) logout, (s) hybrid-sleep, (r) reboot, (S) shutdown, (R) UEFI , (z) suspend-then-hibernate , (h) hibernate
set $power_mangement "power_mangement"
mode $power_mangement {
    bindsym l exec swaylock -i ~/Pictures/Code/27106459-coding-wallpapers.png, mode "default"
    # Exit sway (logs you out of your Wayland session)
    bindsym e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit' -s "No", mode "default"
    bindsym s exec  systemctl hybrid-sleep,mode "default"
    bindsym r exec  systemctl reboot,mode "default"
    bindsym Shift+s exec  systemctl poweroff -i, mode "default"
    bindsym Shift+r exec  systemctl reboot --firmware-setup, mode "default"
    bindsym z exec swaynag -t warning -m 'Sleepy time?!?!' -b 'ZzZz...' 'systemctl suspend-then-hibernate' -s "No", mode "default"
    bindsym h exec systemctl hibernate,mode "default"

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $AltMod+p mode $power_mangement

# Moving around:
# Move your focus around
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# Workspaces:
#
# Switch to workspace
 # alt-icon 
set $terminal    "1:  "
set $coding      "2:  "
 # 龜
set $browser     "3:  "
set $documents   "4:  "
# 
set $filemanager "5:  "
# 
set $mpv         "6:  "
# 
set $utility     "7:  "
set $downloads   "8:  "
# 
set $chating     "9:  "
bindsym $mod+1 workspace $terminal
bindsym $mod+2 workspace $coding
bindsym $mod+3 workspace $browser
bindsym $mod+4 workspace $documents
bindsym $mod+5 workspace $filemanager
bindsym $mod+6 workspace $mpv
bindsym $mod+7 workspace $utility
bindsym $mod+8 workspace $downloads
bindsym $mod+9 workspace $chating
bindsym $mod+0 workspace 10
bindsym $mod+Shift+Tab workspace prev
bindsym $mod+Tab workspace next

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $terminal
bindsym $mod+Shift+2 move container to workspace $coding
bindsym $mod+Shift+3 move container to workspace $browser
bindsym $mod+Shift+4 move container to workspace $documents
bindsym $mod+Shift+5 move container to workspace $filemanager
bindsym $mod+Shift+6 move container to workspace $mpv
bindsym $mod+Shift+7 move container to workspace $utility
bindsym $mod+Shift+8 move container to workspace $downloads
bindsym $mod+Shift+9 move container to workspace $chating
bindsym $mod+Shift+0 move container to workspace 10
bindsym $mod+period  move container to workspace next
bindsym $mod+comma   move container to workspace prev
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.

for_window [app_id="firefox" title="About Mozilla Firefox|Picture-in-Picture|Password Required - Mozilla Firefox|Page Info — (.*)"] floating enable
for_window [app_id="firefox"] focus,layout tabbed
assign [app_id="firefox"]  $browser
bindsym $mod+f exec firefox

for_window [app_id="kitty"] focus
assign [app_id="kitty"] $terminal

for_window [app_id="mpv"] focus,fullscreen enable
assign [app_id="mpv"] $mpv

for_window [app_id="libreoffice-*"] focus
assign [app_id="libreoffice-*"] $documents

for_window [app_id="org.pwmt.zathura"] focus
assign [app_id="org.pwmt.zathura"] $documents

for_window [app_id="com.github.johnfactotum.Foliate"] focus
assign [app_id="com.github.johnfactotum.Foliate"] $documents

for_window [app_id="imv"] focus,fullscreen enable
assign [app_id="imv"] $utility

# Your preferred terminal emulator
set $term kitty
set $code $term --class="coding" --session $DOTFILES/kitty/session.conf

# Start a terminal
bindsym $mod+Return exec $term
bindsym $mod+Shift+Return exec $code

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu $term --class="menu_launcher" -c -e zsh -c "printenv PATH | xargs -d : -I {} -r find -L {} -maxdepth 1 -type f -executable -printf '%f\n' 2>/dev/null| sort -u | fzf | xargs -r swaymsg -t command exec"
for_window [app_id="menu_launcher"] floating enable, resize set width 1000 px height 150 px,move position 0 px 0 px,focus

set $menu_desktop $term --class="desktop_laucher" -e zsh -c "find /usr/share/applications -name '*.desktop' | xargs basename -s '.desktop' -a | fzf | xargs -r swaymsg -t command exec gtk-launch"

for_window [app_id="desktop_laucher"] floating enable , resize set 20 ppt 20 ppt,move position 0 ppt 0ppt, focus

# Start your launcher
bindsym $mod+a exec $menu_desktop

set $file_manager $term --class="nnn"  -e nnn #zsh -cl "nnn;$SHELL" this is to execute nnn -are in the -e zsh -cl then start a SHELL in the background

for_window [app_id="nnn"] focus
assign [app_id="nnn"] $filemanager

bindsym $mod+e exec $file_manager

for_window [app_id="coding"] focus
assign [app_id="coding"] $coding

# Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+h or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+h splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+slash layout toggle split

# Make the current focus fullscreen
# bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+space floating toggle

# Moves focus between the floating and tiled layers
bindsym $mod+Shift+space focus mode_toggle

# Move focus to the parent container
# bindsym $mod+a focus parent

#Focus
focus_follows_mouse yes

#hide mouse on inactivity
seat * hide_cursor 10000
seat * hide_cursor when-typing enable

# # Window borders
# Removes the title bar of each window.
default_border none
default_floating_border none
smart_gaps on
hide_edge_borders --i3 smart


# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+Shift+minus scratchpad show


# Resizing containers:

mode "resize" {
# left will shrink the containers width
# right will grow the containers width
# up will grow the containers height
# down will shrink the containers height

bindsym Left resize shrink width 10px
bindsym Down resize shrink height 10px
bindsym Up resize grow height 10px
bindsym Right resize grow width 10px

# Return to default mode
bindsym Return mode "default"
bindsym Escape mode "default"
}
bindsym $AltMod+r mode "resize"

set $scree_shot_sound paplay /usr/share/sounds/freedesktop/stereo/screen-capture.oga

bindsym --release Print exec grim $HOME/Pictures/"Captura de pantalla de $(date +%F_%X).png" && $scree_shot_sound #Take screenshot of a window
bindsym --release Shift+Print exec grim -g "$(slurp)" $HOME/Pictures/"Captura de pantalla de $(date +%F_%X).png" && $scree_shot_sound #Take a screenshot of a region of a window
bindsym --release Control+Print exec grim - | wl-copy  && $scree_shot_sound #Take a screenshot and copy to clipboard

# Status Bar:
# Read `man 5 sway-bar` for more information about this section.
bar {
  swaybar_command waybar
  workspace_buttons yes
}

#Audio
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +1%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -1%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

#Media keys
bindsym XF86AudioPlay  exec "mpc toggle"
bindsym XF86AudioStop  exec "mpc stop"
bindsym XF86AudioNext  exec "mpc next"
bindsym XF86AudioPrev  exec "mpc prev"
bindsym XF86AudioPause exec "mpc pause"
#To allow a keybinding to be executed while the lockscreen is active
bindsym --locked XF86AudioPlay exec "mpc toggle"

#Brightness
bindsym XF86MonBrightnessDown exec brightnessctl set 1%-
bindsym XF86MonBrightnessUp exec brightnessctl set +1%

#Include sway systemd configuration and environment variables
include /etc/sway/config.d/*

#start sway target
exec "systemctl --user import-environment WAYLAND_DISPLAY SWAYSOCK; systemctl --user start sway-session.target"
