# Default config for sway
# Read `man 5 sway` for a complete reference.

#disable XWayland entirely and run a "pure" Wayland session
xwayland disable

# Logo key. Use Mod1 for Alt.
set $mod Mod4
set $AltMod Mod1

### Output configuration
### Set random wallpaper
set $wallpapers_path $HOME/Pictures/Code
output * bg $(find $wallpapers_path -type f | shuf -n 1) fill

# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration

# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000 -i $lock_bg'

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration

input "2:14:ETPS/2_Elantech_Touchpad" {
  tap enabled
  natural_scroll enabled
  middle_emulation enabled
  click_method clickfinger
  pointer_accel 0.5 # set mouse sensitivity (between -1 and 1)
}

#Set compose key as right alt
#for feather reading man 7 xkeyboard-config
input * xkb_options compose:ralt
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
# Kill focused window
bindsym $mod+Shift+q kill

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+r reload


# set $power_mangement System: (l) lock, (e) logout, (s) suspend, (r) reboot, (S) shutdown, (R) UEFI
set $power_mangement "power_mangement"
mode $power_mangement {
    bindsym l exec swaylock -i ~/Pictures/Code/27106459-coding-wallpapers.png, mode "default"
    # Exit sway (logs you out of your Wayland session)
    bindsym e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit' -s "No", mode "default"
    bindsym s exec  systemctl hybrid-sleep,mode "default"
    bindsym r exec  systemctl reboot,mode "default"
    bindsym Shift+s exec  systemctl poweroff -i, mode "default"
    bindsym Shift+r exec  systemctl reboot --firmware-setup, mode "default"
    bindsym z exec swaynag -t warning -m 'Sleepy time?!?!' -b 'ZzZz...' 'systemctl suspend-then-hibernate' -s "No", mode "default"

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $AltMod+p mode $power_mangement

# Moving around:
# Move your focus around
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
#
# Workspaces:
#
# Switch to workspace
 # alt-icon 
set $terminal    "1:  "
 # 龜
set $browser     "2:  "
# 
set $mpv         "3:  "
set $coding      "4:  "
set $filemanager "5:  "
# 
set $utility     "6:  "
set $downloads   "7:  "
# 
set $documents   "8:  "
# 
set $chating     "9:  "
bindsym $mod+1 workspace $terminal
bindsym $mod+2 workspace $browser
bindsym $mod+3 workspace $mpv
bindsym $mod+4 workspace $coding
bindsym $mod+5 workspape $filemanager
bindsym $mod+6 workspace $utility
bindsym $mod+7 workspace $downloads
bindsym $mod+8 workspace $documents
bindsym $mod+9 workspace $chating
bindsym $mod+0 workspace 10
bindsym $mod+Shift+Tab workspace prev
bindsym $mod+Tab workspace next
# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $terminal
bindsym $mod+Shift+2 move container to workspace $browser
bindsym $mod+Shift+3 move container to workspace $mpv
bindsym $mod+Shift+4 move container to workspace $coding
bindsym $mod+Shift+5 move container to workspace $filemanager
bindsym $mod+Shift+6 move container to workspace $utility
bindsym $mod+Shift+7 move container to workspace $downloads
bindsym $mod+Shift+8 move container to workspace $documents
bindsym $mod+Shift+9 move container to workspace $chating
bindsym $mod+Shift+0 move container to workspace 10
bindsym $mod+period  move container to workspace next
bindsym $mod+comma   move container to workspace prev
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.

#window rules for my menu popup and drop down terminal using the scratchpad
# for_window [title="^menu_term$"] floating enable, resize set width 50 ppt height 50 ppt, move center
# for_window [title="^screensaver$"] fullscreen toggle global
# for_window [title="^drop_down_term$"] floating enable, resize set width 100 ppt height 60 ppt, move position 0px 0px, move scratchpad
# for_window [title="^pulsemixer_term$"] floating enable, resize set width 36 ppt height 39 ppt, move center
#use a particular application's built-in window decorations over the sway
#borders
for_window [app_id="firefoxdeveloperedition"] focus,layout tabbed
assign [app_id="firefoxdeveloperedition"]  $browser
bindsym $mod+f exec firefox-developer-edition

for_window [app_id="kitty"] focus
assign [app_id="kitty"] $terminal

for_window [app_id="mpv"] fullscreen enable,border none,focus
assign [app_id="mpv"] $mpv

for_window [app_id="libreoffice-*"] focus,layout tabbed
assign [app_id="libreoffice-*"] $documents

for_window [app_id="org.pwmt.zathura"] focus,layout tabbed
assign [app_id="org.pwmt.zathura"] $documents

for_window [app_id="apvlv"] focus,layout tabbed
assign [app_id="apvlv"] $documents

# Your preferred terminal emulator
set $term kitty
set $code $term --class="coding" --session $DOTFILES/kitty/session.conf

# Start a terminal
bindsym $mod+Return exec $term
bindsym $mod+Shift+Return exec $code

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu $term --class="menu_launcher" -c -e zsh -c "printenv PATH | xargs -d : -I {} -r find -L {} -maxdepth 1 -type f -executable -printf '%f\n' 2>/dev/null| sort -u | fzf | xargs -r swaymsg -t command exec"
for_window [app_id="menu_launcher"] floating enable, border none, resize set width 1000 px height 150 px,move position 0 px 0 px,focus

set $menu_desktop $term --class="desktop_laucher" -e zsh -c "find /usr/share/applications -name '*.desktop' | xargs basename -s '.desktop' -a | fzf | xargs -r swaymsg -t command exec gtk-launch"

for_window [app_id="desktop_laucher"] floating enable , resize set 20 ppt 20 ppt,move position 0 ppt 0ppt,border none, focus

# Start your launcher
bindsym $mod+a exec $menu_desktop

set $file_manager $term --class="nnn" -e zsh -cl "nnn;$SHELL" #this is to execute nnn -are in the -e zsh -cl then start a SHELL in the background

for_window [app_id="nnn"] border none,focus
assign [app_id="nnn"] $filemanager

bindsym $mod+e exec $file_manager

for_window [app_id="coding"] focus
assign [app_id="coding"] $coding

# Bind App to workspace
# Check class by : xprop
# swaymsg -t get_tree

# Layout stuff:
#
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+h splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+t layout tabbed
bindsym $mod+slash layout toggle split

# Make the current focus fullscreen
#bindsym $mod+f+s fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+Shift+space focus mode_toggle

# Move focus to the parent container
#bindsym $mod+a focus parent
#
# Scratchpad:
#
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
bindsym $mod+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+Shift+minus scratchpad show

# Resizing containers:

mode "resize" {
# left will shrink the containers width
# right will grow the containers width
# up will shrink the containers height
# down will grow the containers height
bindsym Left resize shrink width 10px
bindsym Down resize grow height 10px
bindsym Up resize shrink height 10px
bindsym Right resize grow width 10px

# Return to default mode
bindsym Return mode "default"
bindsym Escape mode "default"
}
bindsym $AltMod+r mode "resize"

set $scree_shot_sound paplay /usr/share/sounds/freedesktop/stereo/screen-capture.oga

bindsym --release Print exec grim $HOME/Pictures/"Captura de pantalla de $(date +%F_%X).png" && $scree_shot_sound #Take screenshot of a window
bindsym --release Shift+Print exec grim -g "$(slurp)" $HOME/Pictures/"Captura de pantalla de $(date +%F_%X).png" && $scree_shot_sound #Take a screenshot of a region of a window
bindsym --release Control+Print exec grim - | wl-copy  && $scree_shot_sound #Take a screenshot and copy to clipboard

# Status Bar:
# Read `man 5 sway-bar` for more information about this section.
# bar {
 #status_command waybar
# font pongo: Font Awesome 5 Free

#     # When the status_command prints a new line to stdout, swaybar updates.
#     # The default just shows the current date and time.
#     #status_command while echo "$(cat /sys/class/power_supply/BAT0/capacity)% $(cat /sys/class/power_supply/BAT0/status) $(date)" ; do sleep 1; done #date +'%Y-%m-%d %l:%M:%S %p'
#     #strip_workspace_numbers yes
#     #workspace_buttons yes
#     # colors {
#     #     statusline #ffffff
#     #     background #323232
#     #     inactive_workspace #32323200 #32323200 #5c5c5c
#     # }
#}

bar {
  swaybar_command waybar
  workspace_buttons yes
}

#Audio
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +1%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -1%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

#Media keys
bindsym XF86AudioPlay  exec "mpc toggle"
bindsym XF86AudioStop  exec "mpc stop"
bindsym XF86AudioNext  exec "mpc next"
bindsym XF86AudioPrev  exec "mpc prev"
bindsym XF86AudioPause exec "mpc pause"
#To allow a keybinding to be executed while the lockscreen is active
bindsym --locked XF86AudioPlay exec "mpc pause"

#Brightness
bindsym XF86MonBrightnessDown exec brightnessctl set 1%-
bindsym XF86MonBrightnessUp exec brightnessctl set +1%

#Menu
#bindsym XF86Search exec bemenu-run
#GTK theme and font
set $gnome-schema org.gnome.desktop.interface
exec {
gsettings set $gnome-schema gtk-theme 'Adwaita:dark'
gsettings set $gnome-schema icon-theme 'Adwaita'
gsettings set $gnome-schema cursor-theme 'Adwaita'
gsettings set $gnome-schema font-name 'JetBrainsMono Nerd Font Mono 11'
}

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.

# Press $mod+o followed by either f, t, Esc or Return to launch firefox,
# thunderbird or return to the default mode, respectively.
# set $mode_launcher Launcher
# bindsym $mod+o mode "$mode_launcher"

# mode "$mode_launcher" {
#     bindsym m exec terminator
#     bindsym n exec nautilus
#     bindsym v exec virt-manager
#     bindsym d exec deepin-screenshot
#     bindsym Return mode "default"
# }

# # Shutdown, Reboot, Lock Screen, and Logout

#hide mouse on inactivity
seat * hide_cursor 10000
seat * hide_cursor when-typing enable

# focus_follows_mouse no

# # Window borders
# Removes the title bar of each window.
#default_border pixel 0
default_border none
default_floating_border none
smart_gaps on
hide_edge_borders --i3 smart

# Set colors
# set $cl_high #009ddc
# set $cl_indi #d9d8d8
# set $cl_back #231f20
# set $cl_fore #d9d8d8
# set $cl_urge #ee2e24
# border colors
#  Colors                border   bg       text     indi     childborder
# client.focused		#ff6e67 #ff6e67 #ff6e67 #ffc1bd #ff6e67
#client.focused          #bababa #bababa #bababa #dadada #bababa
# client.unfocused	#b8b8b8 #b8b8b8 #b8b8b8 #b8b8b8 #b8b8b8
# client.focused_inactive	#b8b8b8 #b8b8b8 #b8b8b8 #b8b8b8 #b8b8b8

# border_images.focused ~/.config/sway/shadows.png
# border_images.focused_inactive ~/.config/sway/shadows.png
# border_images.unfocused ~/.config/sway/shadows.png
# border_images.urgent ~/.config/sway/shadows.png
#client.unfocused	#262626 #262626 #262626 #262626 #262626
#client.focused_inactive	#262626 #262626 #262626 #262626 #262626

# Font
font pango: JetBrainsMono Nerd Font Mono 11

#Autostart
#exec kitty --session $DOTFILES/kitty/session.conf

#Include sway systemd configuration and environment variables
include /etc/sway/config.d/*

#start sway target
#exec "systemctl --user import-environment; systemctl --user start sway-session.target"
exec systemctl --user start sway-session.target
