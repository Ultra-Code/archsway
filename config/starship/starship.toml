# Warning: This config does not include keys that have an unset value

# $all is shorthand for $username$hostname$localip$shlvl$singularity$kubernetes$directory$vcsh$fossil_branch$fossil_metrics$git_branch$git_commit$git_state$git_metrics$git_status$hg_branch$pijul_channel$docker_context$package$bun$c$cmake$cobol$daml$dart$deno$dotnet$elixir$elm$erlang$fennel$golang$gradle$haskell$haxe$helm$java$julia$kotlin$lua$nim$nodejs$ocaml$opa$perl$php$pulumi$purescript$python$raku$rlang$red$ruby$rust$scala$solidity$swift$terraform$typst$vlang$vagrant$zig$buf$guix_shell$nix_shell$conda$meson$spack$memory_usage$aws$gcloud$openstack$azure$direnv$env_var$crystal$custom$sudo$cmd_duratio0line_break$jobs$battery$time$status$container$os$shell$character
"$schema" = "https://starship.rs/config-schema.json"
format = "$os $all"
right_format = "$localip $shlvl $battery $memory_usage $time"
continuation_prompt = "[‚àô](bright-bla0) "
scan_timeout = 30
command_timeout = 500
add_newline = true
follow_symlinks = true

[palettes]

[profiles]

[battery]
format = "[$symbol $percentage]($style)"
full_symbol = "Û∞Åπ"
charging_symbol = "Û∞ÇÑ"                    #üîã
discharging_symbol = "Û∞ÇÉ"
unknown_symbol = "Û∞ÅΩ"
empty_symbol = "Û∞Çé"
disabled = false

[[battery.display]]
threshold = 100
style = "green bold"

[bun]
format = "[$symbol ($version)]($style)"
version_format = "v${raw}"
symbol = "üçû"
style = "bold red"
disabled = false
detect_extensions = []
detect_files = ["bun.lockb", "bunfig.toml"]
detect_folders = []

[c]
format = "[$symbol ($version(-$name))]($style)"
version_format = "v${raw}"
style = "149 bold"
symbol = "Óòû "
disabled = false
detect_extensions = ["c", "h"]
detect_files = ["compile_flags.txt", "CMakeLists.txt"]
detect_folders = []
commands = [["cc", "--version"], ["gcc", "--version"], ["clang", "--version"]]

[character]
format = "$symbol "
success_symbol = "[‚ùØ](bold green)"
error_symbol = '[‚úó ](bold red)'
vimcmd_symbol = '[Ôê¥](bold green)'
vimcmd_visual_symbol = '[V](bold yellow)'
vimcmd_replace_symbol = "[R](bold purple)"
vimcmd_replace_one_symbol = "[‚ùÆ](bold purple)"
disabled = false

[cmake]
format = " [$symbol ($version)]($style)"
version_format = "v${raw}"
symbol = "‚ñ≥"
style = "bold blue"
disabled = false
detect_extensions = []
detect_files = ["CMakeLists.txt", "CMakeCache.txt"]
detect_folders = []

[cmd_duration]
min_time = 1000
format = " [$duration]($style)"
style = "yellow bold"
show_milliseconds = true
disabled = false
show_notifications = false
min_time_to_notify = 45000

[container]
format = '[$symbol \[$name\]]($style) '
symbol = "‚¨¢"
style = "red bold dimmed"
disabled = false

[directory]
truncation_length = 3
truncate_to_repo = true
fish_style_pwd_dir_length = 0
use_logical_path = true
format = "[$path]($style)[$read_only]($read_only_style) "
repo_root_format = "[$before_root_path]($before_repo_root_style)[$repo_root]($repo_root_style)[$path]($style)[$read_only]($read_only_style) "
style = "cyan bold"
disabled = false
read_only = "üîí"
read_only_style = "red"
truncation_symbol = ""
home_symbol = "~"
use_os_path_sep = true

[directory.substitutions]
"Documents" = "Û∞àô "
"Downloads" = "ÔÄô "
"Music" = "Û∞ùö "
"Pictures" = "ÔÄæ "
"Developer" = "Û∞≤ã "

[docker_context]
format = "[$symbol $context]($style) "
symbol = "üê≥"
# symbol = "Ôåà "
style = "blue bold"
only_with_files = true
disabled = false
detect_extensions = []
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []

[fill]
style = "bold black"
symbol = "."
disabled = false

[git_branch]
format = "[[$symbol $branch(:$remote_branch)](fg:purple)]($style)"
symbol = "Óú• "
style = "bold purple"
truncation_length = 9223372036854775807
truncation_symbol = "‚Ä¶"
only_attached = false
always_show_remote = false
ignore_branches = []
disabled = false

[git_commit]
format = '[\($hash$tag\)]($style) '
commit_hash_length = 7
style = "green bold"
only_detached = true
disabled = false
tag_symbol = "üè∑  "
tag_disabled = true
tag_max_candidates = 0

[git_metrics]
format = "([+$added]($added_style)) ([-$deleted]($deleted_style)) "
added_style = "bold green"
deleted_style = "bold red"
only_nonzero_diffs = true
disabled = true
ignore_submodules = false

[git_state]
format = '\([$state ($progress_current/$progress_total)]($style)\) '
rebase = "REBASING"
merge = "MERGING"
revert = "REVERTING"
cherry_pick = "CHERRY-PICKING"
bisect = "BISECTING"
am = "AM"
am_or_rebase = "AM/REBASE"
style = "bold yellow"
disabled = false

[git_status]
format = '([\[$all_status$ahead_behind\]]($style)) '
style = "red bold"
stashed = '\$'
ahead = "‚á°"
behind = "‚á£"
up_to_date = ""
diverged = "‚áï"
conflicted = "="
deleted = "‚úò"
renamed = "¬ª"
modified = "!"
staged = "+"
untracked = "?"
typechanged = ""
ignore_submodules = false
disabled = false

[golang]
format = "[$symbol ($version)]($style)"
version_format = "v${raw}"
symbol = "Óòß "
style = "bold cyan"
disabled = false
not_capable_style = "bold red"
detect_extensions = ["go"]
detect_files = [
  "go.mod",
  "go.sum",
  "go.work",
  "glide.yaml",
  "Gopkg.yml",
  "Gopkg.lock",
  ".go-version",
]
detect_folders = ["Godeps"]

[hostname]
ssh_only = true
ssh_symbol = "üåê "
trim_at = "."
detect_env_vars = []
format = "[$ssh_symbol$hostname]($style)"
style = "green dimmed bold"
disabled = false

[jobs]
threshold = 1
symbol_threshold = 1
number_threshold = 2
format = "[$symbol $number]($style) "
symbol = "‚ú¶"
style = "bold blue"
disabled = false

[localip]
ssh_only = true
format = "[$localipv4]($style) "
style = "yellow bold"
disabled = false

[lua]
format = "[[$symbol ](fg:blue)$version]($style)"
version_format = "v${raw}"
symbol = "Û∞¢±  "
style = "bold blue"
lua_binary = "lua"
disabled = false
detect_extensions = ["lua"]
detect_files = [".lua-version"]
detect_folders = ["lua"]

[memory_usage]
format = "$symbol [$ram( | $swap)]($style)"
symbol = "Û∞çõ "
style = "white bold dimmed"
threshold = 0
disabled = false

[meson]
truncation_length = 4294967295
truncation_symbol = "‚Ä¶"
format = "[$symbol $project]($style) "
symbol = "‚¨¢ "
style = "blue bold"
disabled = false

[nodejs]
format = "[$symbol ($version)]($style)"
version_format = "v${raw}"
symbol = "Óúò "
style = "bold green"
disabled = false
not_capable_style = "bold red"
detect_extensions = ["js", "mjs", "cjs", "ts", "mts", "cts"]
detect_files = ["package.json", ".node-version", ".nvmrc"]
detect_folders = ["node_modules"]

[os]
format = "[$symbol]($style) "
style = "bold white"
disabled = false
# style = "fg:#769ff0 bg:#394260"

[os.symbols]
Windows = "Û∞ç≤"
Ubuntu = "Û∞ïà"
SUSE = "Ôåî"
Raspbian = "Û∞êø"
Mint = "Û∞£≠"
Macos = "Û∞Äµ"
Manjaro = "Ôåí"
Linux = "Û∞åΩ"
Gentoo = "Û∞£®"
Fedora = "Û∞£õ"
Alpine = "ÔåÄ"
Amazon = "Ôâ∞"
Android = "Óúé"
Arch = "Û∞£á"
Artix = "Û∞£á"
CentOS = "ÔåÑ"
Debian = "Û∞£ö"
Redhat = "Û±Ñõ"
RedHatEnterprise = "Û±Ñõ"

[package]
format = "[$symbol $version]($style) "
symbol = "üì¶ "
style = "208 bold"
display_private = false
disabled = false
version_format = "v${raw}"

[php]
format = "[$symbol ($version)]($style)"
version_format = "v${raw}"
symbol = "üêò"
style = "147 bold"
disabled = false
detect_extensions = ["php"]
detect_files = ["composer.json", ".php-version"]
detect_folders = []

[python]
pyenv_version_name = false
pyenv_prefix = "pyenv "
python_binary = ["python", "python3", "python2"]
format = '[${symbol} ${pyenv_prefix}(${version}) (\($virtualenv\))]($style)'
version_format = "v${raw}"
style = "yellow bold"
# symbol = "üêç"
symbol = "ÓòÜ "
disabled = false
detect_extensions = ["py"]
detect_files = [
  "requirements.txt",
  ".python-version",
  "pyproject.toml",
  "Pipfile",
  "tox.ini",
  "setup.py",
  "__init__.py",
]
detect_folders = []

[rust]
format = "[$symbol ($version)]($style)"
version_format = "v${raw}"
symbol = "ü¶Ä"
# symbol = "Óû® "
style = "bold red"
disabled = false
detect_extensions = ["rs"]
detect_files = ["Cargo.toml"]
detect_folders = []

[shell]
format = "[$indicator]($style) "
bash_indicator = "bsh"
fish_indicator = "fsh"
zsh_indicator = "zsh"
powershell_indicator = "psh"
ion_indicator = "ion"
elvish_indicator = "esh"
tcsh_indicator = "tsh"
nu_indicator = "nu"
xonsh_indicator = "xsh"
cmd_indicator = "cmd"
unknown_indicator = ""
style = "white bold"
disabled = true

[shlvl]
threshold = 2
format = "[$symbol $shlvl]($style) "
symbol = "‚ÜïÔ∏è"
repeat = false
repeat_offset = 0
style = "bold yellow"
disabled = false

[status]
format = "[$symbol $status]($style) "
symbol = "‚ùå"
success_symbol = ""
not_executable_symbol = "üö´"
not_found_symbol = "üîç"
sigint_symbol = "üß±"
signal_symbol = "‚ö°"
style = "bold red"
map_symbol = false
recognize_signal_code = true
pipestatus = false
pipestatus_separator = "|"
pipestatus_format = '\[$pipestatus\] => [$symbol$common_meaning$signal_name$maybe_int]($style)'
disabled = true

[sudo]
format = "[as $symbol ]($style)"
symbol = "üßô"
style = "bold blue"
allow_windows = false
disabled = true

[time]
format = '[[Óéä $time]()]($style)'
style = "bold yellow"
use_12hr = false
disabled = false
utc_time_offset = "local"
time_range = "-"
time_format = "%R"               # Hour:Minute Format

[username]
format = "[$user]($style)"
style_root = "red bold"
style_user = "yellow bold"
show_always = false
disabled = false

[zig]
format = " [$symbol ($version)]($style) "
version_format = "v${raw}"
symbol = "‚ö°Ô∏è"
style = "bold yellow"
disabled = false
detect_extensions = ["zig"]
detect_files = ["build.zig", "build.zig.zon"]
detect_folders = []

[custom]
